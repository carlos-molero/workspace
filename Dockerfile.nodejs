# Use the latest Debian as the base image
FROM debian:bullseye AS base

# Set environment variable to make install non-interactive
ENV DEBIAN_FRONTEND=noninteractive

# Break pip system packages
ENV PIP_BREAK_SYSTEM_PACKAGES=1

# Update and install dependencies
RUN apt-get update && apt-get install -y \
  software-properties-common \
  curl \
  xclip \
  ripgrep \
  unzip \
  git \
  bash \
  build-essential \
  python3 \
  python3.10 \
  python3-pip \
  ca-certificates \
  openssl

# Install neovim
RUN curl -L -O "https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz" && \
  tar xzvf nvim-linux64.tar.gz

# Install Node.js using NVM
ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION v20.10.0
RUN mkdir -p $NVM_DIR \
  && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash \
  && . $NVM_DIR/nvm.sh \
  && nvm install $NODE_VERSION \
  && nvm alias default $NODE_VERSION \
  && nvm use default

# Set PATH for Node.js
ENV PATH "$NVM_DIR/versions/node/$NODE_VERSION/bin:$PATH"

# Install Node.js packages
RUN npm i -g vscode-langservers-extracted \
  yaml-language-server prettier \
  @johnnymorganz/stylua-bin \
  pnpm

# Configure Git
RUN git config --global --add safe.directory '*' \
  && git config --global user.name "Carlos Molero" \
  && git config --global user.email "carlos@novascript.io" \
  && git config --global core.editor "nvim"

# Setup BASH-IT
RUN git clone --depth=1 https://github.com/Bash-it/bash-it.git ~/.bash_it && ~/.bash_it/install.sh

# Use custom .bashrc
COPY ./bashrc-template.txt /root/bashrc-template.txt
RUN mv ~/bashrc-template.txt ~/.bashrc

# Set the working directory
WORKDIR /workspace

# Keep the container running
CMD ["sleep", "infinity"]
